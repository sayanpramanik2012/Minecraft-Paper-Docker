name: Docker Build and Push

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      version:
        description: "Paper version to build (leave empty for latest stable)"
        required: false
        type: string
        default: ""

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Paper version
        id: paper_version
        run: |
          # Use provided version or get latest stable
          if [ -n "${{ github.event.inputs.version }}" ]; then
            PAPER_VERSION="${{ github.event.inputs.version }}"
          else
            PAPER_VERSION=$(curl -s https://api.papermc.io/v2/projects/paper | jq -r '.versions[] | select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$"))' | sort -V | tail -n 1)
          fi
          echo "PAPER_VERSION=${PAPER_VERSION}" >> $GITHUB_ENV

      - name: Get existing tags
        id: get_tags
        run: |
          # Get tags from Docker Hub and extract version numbers
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/sayanpramanik/minecraft-paper/tags?page_size=100" | jq -r '.results[].name' | grep -E "^${PAPER_VERSION}-v[0-9]+$" || echo "")
          # Store tags as a comma-separated list to avoid issues with multiline values
          echo "TAGS=$(echo ${TAGS} | tr '\n' ',')" >> $GITHUB_ENV

      - name: Determine version number
        id: version_number
        run: |
          # If no tags exist for this version, start with v1
          if [ -z "$TAGS" ]; then
            VERSION_SUFFIX=1
          else
            # Extract the highest version number and increment
            VERSION_SUFFIX=$(echo "$TAGS" | tr ',' '\n' | grep -o "v[0-9]*$" | sed 's/v//' | sort -n | tail -n 1)
            # Ensure we have a valid number
            if [ -z "$VERSION_SUFFIX" ]; then
              VERSION_SUFFIX=1
            else
              VERSION_SUFFIX=$((VERSION_SUFFIX + 1))
            fi
          fi
          echo "VERSION_SUFFIX=${VERSION_SUFFIX}" >> $GITHUB_ENV
          echo "FULL_VERSION=${PAPER_VERSION}-v${VERSION_SUFFIX}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            sayanpramanik/minecraft-paper:${{ env.FULL_VERSION }}
            sayanpramanik/minecraft-paper:latest
